syntax = "proto3";
package bze.burner;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "bze/burner/params.proto";

option go_package = "github.com/bze-alphateam/bze/x/burner/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc FundBurner(MsgFundBurner) returns (MsgFundBurnerResponse);
  rpc StartRaffle(MsgStartRaffle) returns (MsgStartRaffleResponse);
  rpc JoinRaffle(MsgJoinRaffle) returns (MsgJoinRaffleResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "bze/x/burner/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}


message MsgFundBurner {
  option (amino.name) = "bze/x/burner/MsgFundBurner";
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string amount = 2;
}

message MsgFundBurnerResponse {
}

message MsgStartRaffle {
  option (amino.name) = "bze/x/burner/MsgStartRaffle";
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string pot = 2;
  string duration = 3;
  string chances = 4;
  string ratio = 5;
  string ticket_price = 6;
  string denom = 7;
}

message MsgStartRaffleResponse {
}

message MsgJoinRaffle {
  option (amino.name) = "bze/x/burner/MsgJoinRaffle";
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string denom = 2;
  uint64 tickets = 3;
}

message MsgJoinRaffleResponse {}
