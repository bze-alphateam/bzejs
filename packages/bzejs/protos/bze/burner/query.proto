syntax = "proto3";
package bze.burner;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "bze/burner/params.proto";
import "bze/burner/burned_coins.proto";
import "bze/burner/raffle.proto";

option go_package = "github.com/bze-alphateam/bze/x/burner/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/bze/burner/params";
  }
  rpc Raffles(QueryRafflesRequest) returns (QueryRafflesResponse) {
    option (google.api.http).get = "/bze/burner/raffles";
  }
  rpc RaffleWinners(QueryRaffleWinnersRequest) returns (QueryRaffleWinnersResponse) {
    option (google.api.http).get = "/bze/burner/raffle_winners";
  }
  rpc AllBurnedCoins(QueryAllBurnedCoinsRequest) returns (QueryAllBurnedCoinsResponse) {
    option (google.api.http).get = "/bze/burner/all_burned_coins";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

message QueryAllBurnedCoinsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllBurnedCoinsResponse {
  repeated BurnedCoins burnedCoins = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryRafflesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryRafflesResponse {
  repeated Raffle list = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryRaffleWinnersRequest {
  string denom = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryRaffleWinnersResponse {
  repeated RaffleWinner list = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
