syntax = "proto3";

package bze.tokenfactory;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "bze/tokenfactory/params.proto";
import "bze/tokenfactory/denom_authority.proto";

option go_package = "github.com/bze-alphateam/bze/x/tokenfactory/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/bze/tokenfactory/params";
  
  }
  
  // Queries the DenomAuthority of a denom
  rpc DenomAuthority (QueryDenomAuthorityRequest) returns (QueryDenomAuthorityResponse) {
    option (google.api.http).get = "/bze/tokenfactory/denom_authority";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryDenomAuthorityRequest {
  string denom = 1;
}

message QueryDenomAuthorityResponse {
  DenomAuthority denomAuthority = 1;
}

