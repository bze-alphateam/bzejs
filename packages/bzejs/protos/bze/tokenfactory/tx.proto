syntax = "proto3";

package bze.tokenfactory;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "cosmos/bank/v1beta1/bank.proto";
import "bze/tokenfactory/params.proto";

option go_package = "github.com/bze-alphateam/bze/x/tokenfactory/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams     (MsgUpdateParams    ) returns (MsgUpdateParamsResponse    );
  rpc CreateDenom      (MsgCreateDenom     ) returns (MsgCreateDenomResponse     );
  rpc Mint             (MsgMint            ) returns (MsgMintResponse            );
  rpc Burn             (MsgBurn            ) returns (MsgBurnResponse            );
  rpc ChangeAdmin      (MsgChangeAdmin     ) returns (MsgChangeAdminResponse     );
  rpc SetDenomMetadata (MsgSetDenomMetadata) returns (MsgSetDenomMetadataResponse);
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                          "authority";
  option           (amino.name) = "bze/x/tokenfactory/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateDenom {
  option           (amino.name) = "bze/x/tokenfactory/MsgCreateDenom";
  option (cosmos.msg.v1.signer) = "creator";
  string creator  = 1;
  string subdenom = 2;
}

message MsgCreateDenomResponse {
  string new_denom = 1;
}

message MsgMint {
  option           (amino.name) = "bze/x/tokenfactory/MsgMint";
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string coins   = 2;
}

message MsgMintResponse {}

message MsgBurn {
  option           (amino.name) = "bze/x/tokenfactory/MsgBurn";
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string coins   = 2;
}

message MsgBurnResponse {}

message MsgChangeAdmin {
  option           (amino.name) = "bze/x/tokenfactory/MsgChangeAdmin";
  option (cosmos.msg.v1.signer) = "creator";
  string creator  = 1;
  string denom    = 2;
  string newAdmin = 3;
}

message MsgChangeAdminResponse {}

message MsgSetDenomMetadata {
  option           (amino.name) = "bze/x/tokenfactory/MsgSetDenomMetadata";
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;

  cosmos.bank.v1beta1.Metadata metadata = 2 [
    (gogoproto.moretags) = "yaml:\"metadata\"",
    (gogoproto.nullable) = false
  ];
}

message MsgSetDenomMetadataResponse {}

